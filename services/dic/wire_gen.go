// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dic

import (
	"github.com/zerops-dev/di/app"
)

import (
	_ "golang.org/x/tools/imports"
)

// Injectors from container.go:

//go:generate wire
func CreateApp(applicationSetup *app.ApplicationSetup, config Config) (*App, error) {
	nameServerConfig7 := GetNameServerConfig7(config)
	nameSlogLogger2 := GetNameSlogLogger2()
	nameAppRunnerHandler0 := GetNameAppRunnerHandler0(nameSlogLogger2)
	nameAppRunnerRegister1 := GetNameAppRunnerRegister1(nameAppRunnerHandler0)
	nameServerHandler3, err := GetNameServerHandler3(nameServerConfig7, nameAppRunnerRegister1)
	if err != nil {
		return nil, err
	}
	nameContainerReadDir4 := GetNameContainerReadDir4()
	dicSetter_0_Value, err := getSetter_0_Value(nameContainerReadDir4)
	if err != nil {
		return nil, err
	}
	dicSetter_0 := setSetter_0(nameServerHandler3, dicSetter_0_Value)
	nameContainerReadFile5 := GetNameContainerReadFile5()
	dicSetter_1_Value, err := getSetter_1_Value(nameContainerReadFile5)
	if err != nil {
		return nil, err
	}
	dicSetter_1 := setSetter_1(nameServerHandler3, dicSetter_1_Value)
	nameContainerWriteFile6 := GetNameContainerWriteFile6()
	dicSetter_2_Value, err := getSetter_2_Value(nameContainerWriteFile6)
	if err != nil {
		return nil, err
	}
	dicSetter_2 := setSetter_2(nameServerHandler3, dicSetter_2_Value)
	dicApp := NewApplication(applicationSetup, dicSetter_0, dicSetter_1, dicSetter_2, nameAppRunnerHandler0, nameAppRunnerRegister1, nameServerHandler3, nameSlogLogger2, nameContainerReadDir4, nameContainerReadFile5, nameContainerWriteFile6)
	return dicApp, nil
}
